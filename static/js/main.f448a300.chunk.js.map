{"version":3,"sources":["utilities.js","App.js","index.js"],"names":["roundTheNumber","num","a","parseInt","b","showVideo","ctx","x","y","width","height","score","text","max","video","video1","filter","item","id","rect","fillText","drawImage","drawRect","detections","val","reduce","prev","current","forEach","prediction","color","Math","floor","random","toString","strokeStyle","font","beginPath","fillStyle","Image","src","stroke","OBJ","url","class","App","webcamRef","useRef","canvasRef","useState","cam","setCam","videoRef","runCoco","cocoSsd","load","net","console","log","setInterval","detect","readyState","videoWidth","videoHeight","obj","getContext","useEffect","className","onClick","map","index","style","ref","key","loop","autoPlay","muted","type","videoConstraints","facingMode","exact","position","marginLeft","marginRight","left","right","textAlign","zindex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f448a300.chunk.js","sourcesContent":["const roundTheNumber = num => {\n  // round the number nearest multiple of 50\n  let a = parseInt(num / 20) * 20\n  let b = a + 20\n  return (num -a > b - num) ? b : a\n\n}\n\nconst showVideo = (ctx, x, y, width, height, score, text, max, video) => {\n  if (text === max) {\n    x = roundTheNumber(x)\n    y = roundTheNumber(y)\n    width = roundTheNumber(width)\n    height = roundTheNumber(height)\n    let video1 = video.filter((item) => item.id === text);\n    ctx.rect(x, y, width, height);\n    ctx.fillText(text, x, y);\n    ctx.fillText(score * 100, x - 10, y- 10);\n    ctx.drawImage(video1[0], x, y, width, height);\n  }\n};\n\nexport const drawRect = (detections, ctx, ...video) => {\n  // Loop through each prediction\n  const max = detections\n    .filter((val) => val['class'] === 'chair' || val['class'] === 'cell phone' || val['class'] === 'person')\n    .reduce((prev, current) => {\n      return prev['score'] > current['score'] ? prev : current;\n    }, {})['class'];\n  detections.forEach((prediction) => {\n    // Extract boxes and classes\n    const [x, y, width, height] = prediction['bbox'];\n    const text = prediction['class'];\n    const score = prediction['score'];\n\n    // Set styling\n    const color = Math.floor(Math.random() * 16777215).toString(16);\n    ctx.strokeStyle = '#' + color;\n    ctx.font = '18px Arial';\n\n    // Draw rectangles and text\n    ctx.beginPath();\n    ctx.fillStyle = '#' + color;\n\n    // draw image\n    const img = new Image();\n    img.src = './logo192.png';\n    showVideo(ctx, x, y, width, height, score, text, max, video);\n\n    ctx.stroke();\n  });\n};\n","// Import dependencies\nimport React, { useRef, useEffect, useState } from 'react';\n// import * as tf from '@tensorflow/tfjs';\n// import * as cocossd from '@tensorflow-models/coco-ssd';\nimport Webcam from 'react-webcam';\nimport './App.css';\nimport { drawRect } from './utilities';\nconst OBJ = [\n  {\n    url: 'https://drive.google.com/uc?export=download&id=1Kyg0XBDSdVuFOFmrFC0qPEJfLCisLgmW',\n    class: 'chair',\n  },\n  {\n    url: 'https://archive.org/download/ElephantsDream/ed_1024_512kb.mp4',\n    class: 'cell phone',\n  },\n  {\n    url: 'https://archive.org/download/ElephantsDream/ed_1024_512kb.mp4',\n    class: 'person',\n  },\n];\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const [cam, setCam] = useState(false)\n\n  // video url and ref\n  const videoRef = useRef([]);\n\n  // Main function\n  const runCoco = async () => {\n    // eslint-disable-next-line no-undef\n    const net = await cocoSsd.load();\n    console.log('Handpose model loaded.');\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 1);\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== 'undefined' &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      const obj = await net.detect(video);\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext('2d');\n\n      drawRect(obj, ctx, ...videoRef.current);\n    }\n  };\n\n  useEffect(() => {\n    runCoco();\n  }, []);\n  const videoConstraints = {\n    facingMode: { exact: 'environment' },\n  };\n  const videoConstraint = {\n    facingMode: \"user\"\n  };\n  return (\n    <div className=\"App\">\n      <button onClick={() => setCam(!cam)}>Flip Camara</button>\n      {OBJ.map((item, index) => {\n        return (\n          <video\n            style={{ width: 0, height: 0 }}\n            ref={(ref) => (videoRef.current[index] = ref)}\n            id={item.class}\n            key={item.class}\n            loop\n            autoPlay\n            muted\n          >\n            <source src={item.url} type=\"video/mp4\" />\n          </video>\n        );\n      })}\n      <header className=\"App-header\">\n        <Webcam\n          videoConstraints= {cam ? videoConstraints : videoConstraint}\n          ref={webcamRef}\n          muted={true}\n          style={{\n            position: 'absolute',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            left: 0,\n            right: 0,\n            textAlign: 'center',\n            zindex: 9,\n            width: '100%',\n            height: '80%',\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: 'absolute',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            left: 0,\n            right: 0,\n            textAlign: 'center',\n            zindex: 8,\n            width: '100%',\n            height: '80%',\n          }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}